set cut_paste_input [stack 0]
version 12.2 v7
push $cut_paste_input
NoOp {
 name scriptClean
 tile_color 0x7fffff
 selected true
 xpos -7733
 ypos 14706
 addUserKnob {20 User}
 addUserKnob {22 clean l Clean! T "all_dependencies=\[]\n### Selection Mode Checker #####\n\nif len(nuke.selectedNodes()) >1:\n    Check = True\n    nodes = nuke.selectedNodes()\nelse:\n    nodes=nuke.allNodes()\n    Check = False\n    \n##List of usefull alone Nodes ####\n\nexeption=\[\"Write\",\"Read\", \"StickyNote\", \"ReadGeo2\", \"Camera2\", \"Group\", \"BackdropNode\"]\nalone_node_protection=\[]\n\nfor i in nodes:\n    for j in i.dependencies():\n        all_dependencies.append(j)\nfor i in nodes:\n    if not i.dependencies() and i not in all_dependencies:\n        if i.Class() in exeption:\n            alone_node_protection.append(i)\n\n##Delete all the Disable nodes  #####\n\n\nfor i in nodes:\n    try:\n        if i\[\"disable\"].value():\n            nuke.delete(i)\n        if i.Class()==\"Read\" and i.error():\n            nuke.delete(i)\n    except:\n        None\n\n\n## Variable prep    \nbad_nodes=\[0]\nselected_nodes=nuke.selectedNodes()\nend_message=\"Nothing to Clean\"\n\n\n\n##Main code #########\nwhile bad_nodes:\n    working_nodes=\[nuke.thisNode()]\n    all_nodes=\[]\n    bad_nodes=\[]\n\n    for i in nuke.allNodes():\n        all_nodes.append(i)\n        for j in i.dependencies(): ## make a list of node in use by other nodes\n            if j not in working_nodes:\n                working_nodes.append(j)\n        if i.Class() == \"Write\" or i in alone_node_protection: ## check if the \"unused\" node is either a Write or in the protected list - if YES count as a usefull node\n            working_nodes.append(i)\n        \n    ## Substract all the (selected) nodes by the nodes in use by other node to fid the node that are not used anywhere\n    if Check == True:\n        bad_nodes = (set(all_nodes) - set(working_nodes))-(set(all_nodes) - set(selected_nodes))\n    else:\n        bad_nodes = (set(all_nodes) - set(working_nodes))\n        \n    ## delete the none usefull nodes\n    if bad_nodes:\n        for i in bad_nodes:\n            nuke.delete(i)\n            end_message=\"Clean!\"\n\n\nif len(nuke.selectedNodes()) >1:\n    nodes = nuke.selectedNodes()\nelse:\n    nodes=nuke.allNodes()\n\n\nfor a in nodes:\n    if a.Class()== \"BackdropNode\":\n        check = True\n        for j in a.getNodes():\n            if j.Class() != \"Dot\":\n                check = False\n        if check:\n            nuke.delete(a)\n            end_message=\"Clean!\"\n            \n            \nprint end_message" +STARTLINE}
}
